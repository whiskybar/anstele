- name: create groups
  group: name={{ item }} system=yes
  with_items:
    - admin
    - kvm
    - libvirtd

- name: create users
  user: 
    comment="{{ item.fullname }}"
    groups=admin,sudo,kvm,libvirtd
    name={{ item.username }}
    password={{ item.password }}
    shell=/bin/bash
    update_password=on_create
  with_items: users
  when: item.get('default') or admins is defined and item.username in admins

- name: set the root password
  user: name=root password={{ root.password }}

- name: set the account hosting
  user: name=hosting shell=/bin/bash comment="Hosting Account"

- name: distribute ssh keys for users
  authorized_key:
    user={{ item.username }}
    key="{{ lookup('file', '/etc/ansible/authorized_keys/' + item.username + '.pub')}}"
  with_items: users
  when: item.get('default') or admins is defined and item.username in admins

- name: distribute ssh keys for system users
  authorized_key:
    user={{ item }}
    key="{{ lookup('file', '/etc/ansible/authorized_keys/' + item + '.pub')}}"
  with_items:
    - hosting
    - root

- name: disable ssh access with passwords
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^#?PasswordAuthentication"
    line="PasswordAuthentication no"
  notify:
    - reload ssh

- name: allow ssh users
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^#?AllowUsers"
    line="AllowUsers {{ users|selectattr('default', 'defined')|selectattr('default')|join(' ', attribute='username') }} {{ admins|default([])|join(' ') }} hosting www-data root@{{ master.ipv4 }} root@{{ master.ipv6 }}"
  notify:
    - reload ssh
