- hosts: hub
  gather_facts: no
  vars:
    location: "{{ locations|intersect(group_names)|first }}"
  tasks:

    - name: create the backup directory
      file: path=/var/local/backup state=directory

    - name: create the root ssh key
      command: ssh-keygen -t rsa -P '' -f /root/.ssh/id_rsa creates=/root/.ssh/id_rsa

    - name: cache the root ssh key
      fetch: src=/root/.ssh/id_rsa.pub dest=/tmp/fetched

    - name: find all backed up machines
      add_host: name={{ item }} groups=backup,{{ group_names|join(',') }}
      with_items: groups[location]|difference([inventory_hostname])|intersect(hub.backup)
      delegate_to: "{{ item }}"

- hosts: backup
  gather_facts: no
  vars:
    location: "{{ locations|intersect(group_names)|first }}"
    hub: "{{ groups.get(location + '-hub', ['replicator'])|first }}"
  tasks:

    - name: copy the root ssh key
      authorized_key: user=root key="{{ lookup('file', '/tmp/fetched/%s/root/.ssh/id_rsa.pub' % hub) }}"

    - name: allow the hub to connect   

#    - name: list hosts to back up
#      debug: msg={{ item }}
#      with_items: groups[location]|difference([inventory_hostname])|intersect(hub.backup)
